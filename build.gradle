plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group


repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

repositories {
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
	mavenCentral()
	flatDir {
		dirs 'libs'
	}
	maven { url 'https://jitpack.io' }
	maven {
		url "https://maven.wispforest.io/"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
	modImplementation include("io.github.cottonmc:LibGui:8.0.2+1.20")//4.0.0-alpha.1+21w11a")//3.3.2+1.16.4")
	implementation include("io.sfrei:tracksearch:0.8.1")
	implementation include("com.squareup.okhttp3:okhttp:4.11.0")
	implementation include("com.squareup.retrofit2:retrofit:2.9.0")
	implementation include("org.jetbrains:annotations:13.0")
	implementation include("com.fasterxml.jackson.core:jackson-annotations:2.15.2")
	implementation include("com.fasterxml.jackson.core:jackson-core:2.15.2")
	implementation include("com.fasterxml.jackson.core:jackson-databind:2.15.2")
	implementation include("org.jsoup:jsoup:1.16.1")
	implementation include("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.20")
	implementation include("org.jetbrains.kotlin:kotlin-stdlib:1.6.20")
	implementation include("org.jetbrains.kotlin:kotlin-stdlib-common:1.6.20")
	implementation include("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.6.20")
	implementation include("org.projectlombok:lombok:1.18.26")
	implementation include("com.squareup.okhttp3:okhttp-urlconnection:4.11.0")
	implementation include("com.squareup.okio:okio:3.2.0")
	implementation include("com.squareup.okio:okio-jvm:3.2.0")
	implementation include("org.slf4j:slf4j-api:2.0.7")

	// https://mvnrepository.com/artifact/net.lingala.zip4j/zip4j
	implementation include(group: 'net.lingala.zip4j', name: 'zip4j', version: '2.11.5')
	implementation include(group: 'org.sejda.imageio', name: 'webp-imageio', version: '0.1.6')


	annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")
	include("io.wispforest:owo-lib:${project.owo_version}")
	//implementation include(group: 'com.google.code.gson', name: 'gson', version: '2.8.5')

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
